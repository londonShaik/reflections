What happens when you initialize a repository? Why do you need to do it?

	initializing a repository is the first way to create a repository on your system. A .git file gets stored into your directory and it has all the details which make the directory a repository.

How can you use the staging area to make sure you have one commit per logical change?

	the staging area acts as an intermediate step between the working directory and the repository. so it just ensures that you are doing one commit per logical change. it like gives you a second chance to review this.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	when you are not sure whether a feature you want to implement would work, but you want to take the risk anyway. when you want to keep two or more versions of a project, and may be later decide on which one to finalize, or may be want to revert back to one of the previous versions. when you want to implement a new feature, but before its done, have a working version of a project in your hands to show it to your friends.

How do the diagrams help you visualize the branch structure?

	diagrams always help you visualize data and structures easily. they help the brain gasp as much data as possible from the diagram. same is the case with examples - they help you understand the logic easily than by having pages of theory supporting your case.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	merging 2 branches combines the features of both the branches. diagrams are always better when you want to represent trees and graphs, hence we use diagrams.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	git's auto commit is always a good choice. manual conflicts are unavoidable when there are conflicts and automatic commits cannot be executed.